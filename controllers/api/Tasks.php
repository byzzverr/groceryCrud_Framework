<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Tasks extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();

        $this->load->library("Aauth");
		$this->load->model('task_model');
        $this->load->model('event_model');
        $this->load->model('app_model');
        $this->load->model('financial_model');
        $this->load->model('user_model');
    }
	public function get_tasks_post()
    {

        $requestjson = file_get_contents('php://input');
        $requestjson = json_decode($requestjson, true);

        $this->app_model->save_raw_data(json_encode($requestjson));

        if (isset($requestjson['token']) && !empty($requestjson['token'] && $requestjson['token']) != ''){

            $this->load->model('user_model');
            $this->load->model('customer_model');
            $this->load->model('trader_model');

            $trader_id = false;
            $user_id = false;
            //this is here for when a trader completes a task on behalf of a store.
            if (isset($requestjson['store_id']) && !empty($requestjson['store_id'] && $requestjson['store_id']) != ''){
                $user = $this->customer_model->get_user_from_customer_id($requestjson['store_id']);
                $user_id = $user['id'];
                $trader_user_id = $this->user_model->get_user_from_token($requestjson['token']);
                $trader_id = $this->trader_model->get_trader_from_user_id($trader_user_id);
            }else{
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);
            }
                
            if($user_id){

				$data['tasks'] = $this->task_model->getActiveTasks($user_id);
				if ($data['tasks']==null)
				{
					$message = [
					'success' => false,
					'message' => 'No Tasks found.'
					];
				}
				else
				{
					$message = [
					'success' => true,
					'message' => 'Request processed successfully.',
					'tasks' => $data['tasks']
					];
				}

            }else{
                $message = [
                    'success' => false, // Automatically generated by the model
                    'data' => array(),
                    'message' => 'Your token does not appear to be valid'
                ];
            }
        }else{
            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => 'Please supply a valid token'
            ];
        }
	$this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
  }
  
  public function set_task_availability_post()
  {
	  $requestjson = file_get_contents('php://input');
        $requestjson = json_decode($requestjson, true);
		$message=array();
		if (!isset($requestjson['task_id']))
		{
			$message = [
            'success' => false,
            'message' => 'No task ID was supplied'
			];
		}
		else if (!isset($requestjson['active_flag']))
		{
			$message = [
            'success' => false,
            'message' => 'No active_flag was supplied'
			];
		}
		else
		{
			$this->task_model->setTaskAvailability($requestjson['task_id'],$requestjson['active_flag']);
				$message = [
				'success' => true,
				'message' => 'Flag successfully set'
				];
		}
		$this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code

  }
}