<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Deliveries extends REST_Controller {

function __construct()
{
    // Construct the parent class
    parent::__construct();
//
    $this->load->library("Aauth");
    $this->load->model('event_model');
    $this->load->model('app_model');
    $this->load->model('financial_model');
    $this->load->model('user_model');
    $this->load->model('delivery_model');

}

public function get_deliveries_post(){
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson,'api','get_deliveries_post');
        $requestjson = json_decode($requestjson, true);

        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
            $user_id = $this->user_model->get_user_from_token($requestjson['token']);

            if($user_id){
            $data = $this->delivery_model->get_deliveries($user_id); 
      
            
            if(!empty($data)){

                if(empty($data['orders'])){

                    if($data['delivery']['date_closed'] == null){
                        $message = [
                        'success' => true, // Automatically generated by the model
                        'data' => $data,
                        'message' => "All orders delivered. Please click Complete Deliveries"
                        ];
                    }else{
                        $message = [
                        'success' => true, // Automatically generated by the model
                        'data' => $data,
                        'message' => "All deliveries have been completed."
                        ];
                    }
                    
                }else{
                    $message = [
                    'success' => true, // Automatically generated by the model
                    'data' => $data,
                    'message' => "Ok"
                    ];
                }
                
            }else{
                 $message = [
                'success' => false, // Automatically generated by the model
                'data' => $data,
                'message' => "No deliveries available for you today."
                ];
            }
                
            }else{
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }else{

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];
            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    
}
public function get_distributor_order_post(){
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson,'api','get_distributor_order_post');
        $requestjson = json_decode($requestjson, true);

        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);

            if($user_id){
                
                $distributor_order_id = $requestjson['distributor_order_id'];  
                $data = $this->order_model->get_dis_order_info($distributor_order_id); 
            
            if(!empty($data)){
                $message = [
                'success' => true, // Automatically generated by the model
                'data' => $data,
                'message' => "Ok"
                ];
            }else{
                 $message = [
                'success' => true, // Automatically generated by the model
                'data' => $data,
                'message' => "Ok"
                ];
            }
                
            }else{
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }else{

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];
            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    
}
    
public function get_delivery_reasons_post(){
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson,'api','get_delivery_reasons_post');
        $requestjson = json_decode($requestjson, true);

        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);

            if($user_id){
                $data = $this->delivery_model->delivery_reasons(); 
            
                if(!empty($data)){
                    $message = [
                    'success' => true, // Automatically generated by the model
                    'data' => $data,
                    'message' => "Ok"
                    ];
                }else{
                     $message = [
                    'success' => true, // Automatically generated by the model
                    'data' => $data,
                    'message' => "Ok"
                    ];
                }
                
            }else{
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }else{

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];
            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    
}

    public function close_delivery_post()
    {
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson,'api','close_delivery');
        $requestjson = json_decode($requestjson, true);

        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);

            if($user_id){
               
                $delivery_id = $requestjson['delivery_id'];

                $cash = 0;
                if(isset($requestjson['orders']) && count($requestjson['orders']) >= 1){
                    foreach ($requestjson['orders'] as $key => $order) {
                        $this->delivery_model->close_delivery_order($delivery_id, $order['do_id'], $order['r_id']);
                    }
                }

                $data['delivery_id'] = $delivery_id;
                $data['cash_expected'] = $this->delivery_model->get_delivery_total($delivery_id);
                $this->delivery_model->close_delivery($delivery_id, $data['cash_expected']);

                if(!empty($data))
                {
                    $message = [
                    'success' => true, // Order amount returned
                    'data' => $data,
                    'message' => "Ok"
                    ];
                }
                else
                {
                     $message = [
                    'success' => false, // Order amount not returned or is equal to 0
                    'data' => $data,
                    'message' => "An error occurred"
                    ];
                }
            }
            else
            {
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }
        else
        {

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }
    
public function delivery_cashout_post(){
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson);
        $requestjson = json_decode($requestjson, true);

        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);

        if($user_id){
               
                $delivery_id       = $requestjson['delivery_id']; 
                $actual_received   = $requestjson['actual_received']; 
              
                $data = $this->delivery_model->delivery_cashout($delivery_id); 
            
           
                $message = [
                'success' => true, // Automatically generated by the model
                'data' => $data,
                'message' => "Ok"
                ];
                
            }else{
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }else{

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];
            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    
}
    
    
public function nav_started_post(){
        $requestjson = file_get_contents('php://input');
        $this->app_model->save_raw_data($requestjson,'api','nav_started');
        $requestjson = json_decode($requestjson, true);
        $data='';
        if ($requestjson['token'] != '' && !empty($requestjson['token'])){
           
                $user_id = $this->user_model->get_user_from_token($requestjson['token']);

        if($user_id){
               
                $distributor_order_id  = $requestjson['distributor_order_id']; 
                
                /*
                    here we need to inform the customer that the delivery is on its way.
                */

                $distributor_order = $this->delivery_model->nav_started($user_id, $distributor_order_id); 
           
                $message = [
                'success' => true, // Automatically generated by the model
                'data' => $data,
                'message' => "Ok"
                ];
                
            }else{
                $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Token not valid."
                ];
            }
        }else{

            $message = [
                'success' => false, // Automatically generated by the model
                'data' => array(),
                'message' => "Please post a valid token."
            ];
            
        }        

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code   
}
 

public function confirm_delivery_post(){

    $requestjson = file_get_contents('php://input');
    $requestjson = json_decode($requestjson, true);
    $nopicture = $requestjson;
    $nopicture['image'] = 'removed from log for space reasons';
    $this->app_model->save_raw_data(json_encode($nopicture),'api','confirm_delivery_post');
    $signature_picture = '';

    $data='';
    if ($requestjson['token'] != '' && !empty($requestjson['token'])){
       
            $user_id = $this->user_model->get_user_from_token($requestjson['token']);

    if($user_id){
           
            $distributor_order_id       = $requestjson['distributor_order_id'];
            $delivery_id                = $requestjson['delivery_id'];
            $data_to['time_taken']      = $requestjson['time_taken'];
            $data_to['long']            = $requestjson['long'];
            $data_to['lat']             = $requestjson['lat'];
            $data_to['delivery_date']   = date("Y-m-d H:i:s");
            
            /*
                here we need to change order status and save information.
                move the distributor order status to delivered.
                save the image and the time taken into the del_orders table
                $this->spazapp_model->base64_to_jpeg($requestjson['photo'], 'assets/uploads/customer/'.$store_picture);
            */

            if(isset($requestjson['image']) && $requestjson['image'] != ''){
                $signature_picture = 'signature_' . $delivery_id.'-'.$distributor_order_id.'.jpg';
                $this->load->model('spazapp_model');
                $this->spazapp_model->base64_to_jpeg($requestjson['image'], 'assets/uploads/signatures/'.$signature_picture);
                unset($requestjson['photo']);
                $data_to['signiture'] = $signature_picture;
            }

            $distributor_order = $this->delivery_model->confirm_delivery($delivery_id, $distributor_order_id, $data_to);
       
            $message = [
            'success' => true, // Automatically generated by the model
            'data' => $data,
            'message' => "Ok"
            ];
            
        }else{
            $message = [
            'success' => false, // Automatically generated by the model
            'data' => array(),
            'message' => "You have no deliveries assigned to you."
            ];
        }
    }else{

        $message = [
            'success' => false, // Automatically generated by the model
            'data' => array(),
            'message' => "Please post a valid token."
        ];
        
    }        

    $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code   
}

}

?>