<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
require APPPATH . '/libraries/REST_Controller.php';

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Questions extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();

        $this->load->library("Aauth");
		$this->load->model('survey_model');
    }
	public function index_get()
	{
		$survey = $this->get('id');
		$surveyData = $this->survey_model->getSurveyPrefix($survey);
		$data["valid_survey"] = true;
		$data["show_questions"] = true;
		$data["survey_errors"] = false;

		// check if the provided slug was valid
		if($surveyData != null) {

		  // populate survery information
		  $surveyPrefix = $surveyData->prefix;
		  $data["survey_title"] = $surveyData->title;
		  $data["survey_subtitle"] = $surveyData->subtitle;
		}
		else {
		  $data["valid_survey"] = false; // display error
		}

		// check if the survey was submitted
		if($_SERVER['REQUEST_METHOD'] == 'POST' && $data["valid_survey"]) {

		  $result = $this->survey_model->validateSubmission($surveyPrefix);
		  if(array_key_exists("errors", $result)) {
			$data["errors"] = $result["errors"];
			$data["survey_errors"] = true;
		  }
		  else {
			$data["show_questions"] = false;
		  }
		}

		// check if the user specified a valid survey
		if(!empty($surveyPrefix)) {

		  $data["questions"] = $this->survey_model->getSurveyData($surveyPrefix);
		  ($data["questions"] === null) ? $data["valid_survey"] = false: "";
		}
		  
	  
		$message = [
			'success' => true, // Automatically generated by the model
			'data' => $data,
			'message' => 'Successfully Retrieved'
		];

		$this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
  }
  
  public function save_get()
  {
	  $email = $this->get('email');
	  $question_id = $this->get('qid');
	  $option_id = $this->get('oid');
	  $question_type=$this->get('qtype');
	  $text = $this->get('text');
	  $surveyPrefix = $this->get('prefix');
	  $response=new stdClass();
	  $response->id=$question_id;
	  $response->question_type=$question_type;
	  $response->response=array($text);
		$responses=[
			'email'=>$email,
			'response'=>$response
		];
		$message = [
			'success' => true, // Automatically generated by the model
			'data' => $this->survey_model->submitData($surveyPrefix, $responses),
			'message' => 'Saved'
		];
		$this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
  }
}
